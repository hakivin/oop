import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.FlowLayout;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.SwingConstants;
import java.awt.Toolkit;
import java.awt.GridLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JPasswordField;
import java.awt.Label;
import java.awt.Color;

public class PasswordAuthenticator extends JFrame {

	private JPanel contentPane;
	private JPasswordField passwordField;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					PasswordAuthenticator frame = new PasswordAuthenticator();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public PasswordAuthenticator() {
		setResizable(false);
		setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\W10\\Pictures\\446Munchlax_SM.png"));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 522, 356);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel titlePanel = new JPanel();
		titlePanel.setBounds(0, 0, 516, 56);
		contentPane.add(titlePanel);
		
		JLabel title = new JLabel("Password Validation");
		title.setFont(new Font("Comic Sans MS", Font.PLAIN, 32));
		titlePanel.add(title);
		
		JPanel labelPanel = new JPanel();
		labelPanel.setBounds(12, 101, 494, 37);
		contentPane.add(labelPanel);
		labelPanel.setLayout(new GridLayout(2, 1, 0, 0));
		
		JLabel firstLine = new JLabel("Password must ensures at least one lowercase, uppercase, number, length");
		firstLine.setFont(new Font("Tahoma", Font.PLAIN, 15));
		labelPanel.add(firstLine);
		
		JLabel secondLine = new JLabel("and symbol exist in a 8+ character ");
		secondLine.setFont(new Font("Tahoma", Font.PLAIN, 15));
		labelPanel.add(secondLine);
		
		JPanel panel = new JPanel();
		panel.setBounds(12, 182, 494, 37);
		contentPane.add(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		
		JLabel passwordTag = new JLabel("Insert Your Password :");
		passwordTag.setFont(new Font("Tahoma", Font.PLAIN, 15));
		passwordTag.setHorizontalAlignment(SwingConstants.LEFT);
		panel.add(passwordTag);
		
		final Label label = new Label("");
		
		label.setAlignment(Label.CENTER);
		label.setFont(new Font("Dialog", Font.PLAIN, 30));
		label.setBounds(0, 225, 516, 65);
		contentPane.add(label);
		
		passwordField = new JPasswordField();
		passwordField.addKeyListener(new KeyAdapter() {
			public void keyPressed(KeyEvent e) {
				String insert = passwordField.getText();
				if(e.getKeyCode()==KeyEvent.VK_ENTER) {
					if(check(insert)) {
						label.setForeground(Color.GREEN);
						label.setText("Your password is valid");
					}
					else {
						label.setForeground(Color.RED);
						label.setText("Invalid Password");
					}
				}
			}
		});
		passwordField.setFont(new Font("Tahoma", Font.PLAIN, 15));
		passwordField.setColumns(25);
		panel.add(passwordField);
		
		
		
		
	}
	
	public boolean check(String insert) {
		if(insert.matches("^(?=\\P{Ll}*\\p{Ll})(?=\\P{Lu}*\\p{Lu})(?=\\P{N}*\\p{N})(?=[\\p{L}\\p{N}]*[^\\p{L}\\p{N}])[\\s\\S]{8,}$"))
			return true;
		else
			return false;
	}
}
